package user;

//存储
public class daposit {
    int NLFF = 1000;

    public int[][] dep() {
        /**
         * 经作者观察
         * 每个坐标与其可直接连接的点最多为5个
         * 数组中数字代表相连坐标下标
         * 第6个数代表状态
         * 0为未经过
         *共设置102个坐标点
         * 花里胡哨没啥用，不如一个一个敲上去
         */
        int arr[][] = new int[][]{{0, 0, 0, 0, 0, 0}, {1, 3, 5, 0, 0},//2
                {2, 4, 0, 0, 0, 0}, {3, 6, 7, 0, 0, 0},//4
                {2, 4, 6, 0, 0, 0}, {4, 5, 8, 10, 0, 0},//6
                {4, 8, 50, 0, 0, 0}, {6, 7, 9, 0, 0, 0},//8
                {8, 10, 45, 0, 0, 0}, {6, 9, 14, 11, 12, 0},//10
                {10, 12, 13, 48, 0, 0}, {10, 11, 13, 16, 0, 0},//12
                {12, 11, 16, 0, 0, 0}, {5, 15, 11, 0, 0, 0},//14
                {14, 101, 0, 0, 0, 0}, {12, 13, 17, 18, 0, 0},//16
                {16, 18, 19, 0, 0, 0}, {17, 16, 19, 20, 21, 0},//18
                {17, 18, 20, 21, 32, 0}, {18, 19, 21, 22, 0, 0},//20
                {18, 19, 20, 22, 0, 0}, {20, 21, 101, 24, 23},//22
                {22, 24, 28, 0, 0, 0}, {22, 23, 25, 26, 0, 0},//24
                {24, 99, 26, 0, 0, 0}, {25, 24, 27, 97, 0, 0},//26
                {26, 28, 0, 0, 0, 0}, {23, 27, 29, 30, 83, 0},//28
                {28, 0, 0, 0, 0, 0}, {28, 31, 59, 0, 0, 0},//30
                {30, 32, 33, 0, 0, 0}, {19, 33, 49, 0, 0, 0},//32
                {32, 35, 34, 31, 0, 0}, {33, 57, 0, 0, 0, 0},//34
                {36, 33, 0, 0, 0, 0}, {49, 37, 35, 55, 0, 0},//36
                {38, 39, 36, 0, 0, 0}, {37, 39, 40, 0, 0, 0},//38
                {40, 38, 37, 41, 0, 0}, {38, 39, 41, 0, 0, 0},//40
                {40, 39, 42, 0, 0, 0}, {43, 41, 103, 53, 0, 0},//42
                {44, 45, 42, 0, 0, 0}, {50, 51, 43, 0, 0, 0},//44
                {9, 46, 47, 43, 0, 0}, {45, 47, 48, 0, 0, 0},//46
                {45, 46, 48, 0, 0, 0}, {11, 47, 49, 41, 46, 0},//48
                {16, 48, 36, 32, 0, 0}, {7, 44, 0, 0, 0, 0},//50
                {44, 52, 102, 0, 0, 0}, {51, 103, 0, 0, 0, 0},//52
                {42, 103, 54, 0, 0, 0}, {53, 55, 0, 0, 0, 0},//54
                {54, 56, 36, 0, 0, 0}, {55, 57, 0, 0, 0, 0},//56
                {34, 58, 56, 0, 0, 0}, {57, 59, 0, 0, 0, 0},//58
                {30, 58, 60, 65, 0, 0}, {59, 62, 61, 0, 0, 0},//60
                {60, 63, 0, 0, 0, 0}, {60, 64, 0, 0, 0, 0},//62
                {61, 64, 70, 0, 0, 0}, {62, 65, 63, 0, 0, 0},//64
                {59, 64, 66, 0, 0, 0}, {67, 68, 65, 72, 75, 0},//66
                {69, 68, 66, 0, 0, 0}, {67, 69, 66, 0, 0, 0},//68
                {80, 67, 68, 79, 0, 0}, {63, 71, 0, 0, 0, 0},//70
                {70, 72, 73, 0, 0, 0}, {66, 71, 73, 0, 0, 0},//72
                {72, 71, 74, 0, 0, 0}, {73, 75, 76, 0, 0, 0},//74
                {66, 78, 76, 74, 0, 0}, {74, 75, 77, 0, 0, 0},//76
                {76, 79, 89, 0, 0, 0}, {75, 79, 0, 0, 0, 0},//78
                {69, 78, 77, 0, 0, 0}, {81, 84, 69, 86, 0, 0},//80
                {80, 82, 0, 0, 0, 0}, {81, 83, 0, 0, 0, 0},//82
                {28, 82, 0, 0, 0, 0}, {80, 85, 0, 0, 0, 0},//84
                {84, 93, 0, 0, 0, 0}, {87, 88, 80, 0, 0, 0},//86
                {89, 86, 0, 0, 0, 0}, {86, 89, 0, 0, 0, 0},//88
                {90, 91, 88, 87, 77, 0}, {89, 91, 98, 0, 0, 0},//90
                {89, 90, 92, 0, 0, 0}, {91, 93, 0, 0, 0, 0},//92
                {85, 92, 94, 0, 0, 0}, {93, 95, 96, 0, 0, 0},//94
                {94, 96, 97, 0, 0, 0}, {94, 95, 97, 0, 0, 0},//96
                {26, 95, 0, 0, 0, 0}, {90, 99, 0, 0, 0, 0},//98
                {25, 100, 98, 0, 0, 0}, {99, 101, 0, 0, 0, 0},//100
                {15, 100, 22, 0, 0, 0}, {51, 0, 0, 0, 0, 0},//102
                {52, 53, 42, 0, 0, 0}};//103
        for (int i = 0; i < 103; i++) {
            for (int j = 0; j < 5; j++) {
                if (arr[i][j] != 0)
                    arr[i][j]--;
            }
        }
        return arr;
    }
}
